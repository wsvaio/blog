// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model article {
  id      Int    @id @default(autoincrement())
  title   String @unique
  content String @default("")

  comments comment[]
  tags     tag[]
  type     type      @relation(fields: [typeId], references: [id])

  reads Int @default(0) // 阅读次数
  likes Int @default(0) // 点赞次数

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  typeId Int
}

model comment {
  id      Int    @id @default(autoincrement())
  content String @default("")
  user    user   @relation(fields: [userId], references: [id])

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  article   article? @relation(fields: [articleId], references: [id])
  articleId Int?
  userId    Int
}

model user {
  id      Int       @id @default(autoincrement())
  avatar  String
  name    String
  email   String
  comment comment[]

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model tag {
  id   Int    @id @default(autoincrement())
  name String @unique

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  articles article[]
}

model type {
  id   Int    @id @default(autoincrement())
  name String @unique

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  article article[]
}

model file {
  id           Int      @id @default(autoincrement())
  name         String
  size         String
  type         String
  lastModified String
  data         Bytes
  createAt     DateTime @default(now())
  updateAt     DateTime @updatedAt

  music      music[] @relation("musicFile")
  musicCover music[] @relation("musicCover")
  musicLrc   music[] @relation("musicLrc")
}

model music {
  id     Int    @id @default(autoincrement())
  name   String
  artist String

  file  file @relation("musicFile", fields: [fileId], references: [id])
  cover file @relation("musicCover", fields: [coverId], references: [id])
  lrc   file @relation("musicLrc", fields: [lrcId], references: [id])

  fileId  Int
  coverId Int
  lrcId   Int

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}
