// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model article {
  id      Int    @id @default(autoincrement())
  title   String @unique
  content String @default("")

  comments comment[]
  tags     tag[]
  type     type      @relation(fields: [typeId], references: [id])

  reads Int @default(0) // 阅读次数
  likes Int @default(0) // 点赞次数

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  coreUpdateAt DateTime @default(now())

  typeId Int
}


model comment {
  id      Int    @id @default(autoincrement())
  content String @default("")

  user   user @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  commentId Int?

  comment  comment?  @relation("comment", fields: [commentId], references: [id], onDelete: Cascade)
  comments comment[] @relation("comment")

  from Json @default("{}")

  article   article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId Int
}

model user {
  id           Int     @id @default(autoincrement())
  avatar       String
  name         String
  email        String  @unique
  acceptEmails Boolean
  site         String  @default("")

  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  comments comment[]
}

model tag {
  id   Int    @id @default(autoincrement())
  name String @unique

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  articles article[]
}

model type {
  id   Int    @id @default(autoincrement())
  name String @unique

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  articles article[]
}

model file {
  id           Int      @id @default(autoincrement())
  name         String
  size         String
  type         String
  lastModified String
  data         Bytes
  createAt     DateTime @default(now())
  updateAt     DateTime @updatedAt

  musics      music[] @relation("musicFile")
  musicCovers music[] @relation("musicCover")
  musicLrcs   music[] @relation("musicLrc")
}

model music {
  id     Int    @id @default(autoincrement())
  name   String
  artist String

  file  file @relation("musicFile", fields: [fileId], references: [id])
  cover file @relation("musicCover", fields: [coverId], references: [id])
  lrc   file @relation("musicLrc", fields: [lrcId], references: [id])

  fileId  Int
  coverId Int
  lrcId   Int

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model admin {
  id       Int    @id @default(autoincrement())

  name  String @default("管理员")

  username String @unique
  password String

  role     Int @default(1)

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model friend {
  id       Int    @id @default(autoincrement())

  name  String
  link  String
  avatar String?
  descr String?
  screenshot String?

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}
